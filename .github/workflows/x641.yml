#=================================================
#   Description: Build  X86-64固件 FROM LEAN'S LEDE
#   Author: JK
#=================================================

#=================================================
name: Build X86-64-202100601
#=================================================

on: 
  release:
    types: [published]
  push:
    branches: 
     - master
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -yqq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib openssl pcsc-tools cvs autoconf libccid automake libtool gettext  cmake tar bzip2 gzip patch ncurses-bin flex bison pkg-config wget libssl-dev libudev-dev openssl git libusb-dev libpcsclite-dev subversion dialog opensc ssh gcc g++ dialog make subversion  libccid  libpcsc-perl pcsc-tools pcscd libpcsc-perl pcsc-tools
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        
        
    - name: Clone source code
      run: |
        git clone https://github.com/coolsnowwolf/lede lede
        
        ##修改lede目录中的feeds.conf.default文件，把第5行的 # 去掉。
       # cd lede
       # sed -i '5s/#//' feeds.conf.default
##***************************************************************************  
    ##下载kenzok8/openwrt-packages的源代码 和 passwall依赖库kenzok8/small.git。
    - name: Clone openwrt-packages code
      run: |                 
          cd lede/package          
          git clone https://github.com/fw876/helloworld.git
          git clone https://github.com/LemoFire/luci-app-aliddns.git             
          git clone https://github.com/zzq12345/OpenWrt-Packages-DVB.git
         
         
        
    - name: Clone small code
      run: |
      #cd lede/package &&  git clone https://github.com/kenzok8/small.git
        
##****************************************************************************     
      
        
    - name: Update feeds
      run: cd lede && ./scripts/feeds update -a

    - name: Install feeds
      run: cd lede && ./scripts/feeds install -a
    - name: dele tvh
      run: cd lede && rm -rf ./feeds/packages/multimedia/tvheadend
        
##******************************************************


    - name: Load custom configuration
      run: |
        #=================================================
        #+++++++++++++++++++++++++++++++++++++++++++++++++
        cp x641.config ./lede/.config
        chmod +x diy-newifi3.sh
        ./diy-newifi3.sh
        
        #++++++++++++++++++++++++++++++++++++++++++++++++
        #=================================================
        make defconfig
    - name: Download package
      run: |
        echo -e "$(nproc) thread build."
        cd lede && make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Build
      run: |
        cd lede
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
 
 ######把上面生成的.config文件拷贝到bin/targets/x86/64/my.config，从而在下载固件时，一起下载回来。
    - name: Copy .config  to  ./bin/targets/x86/64/my.config
      run: |
        cd lede
        cp  .config   ./bin/targets/x86/64/my.config  
   
   
    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        #=================================================
        name: X86-64-20210601
        path: ./lede/bin
